// <auto-generated />
using System;
using ETLProcess.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ETLProcess.Migrations
{
    [DbContext(typeof(ETLDbContext))]
    [Migration("20210411075400_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ETLProcess.Model.Account", b =>
                {
                    b.Property<string>("PayerAccountId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MasterAccountId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PayerAccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_01", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_01");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_02", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_02");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_03", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_03");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_04", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_04");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_05", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_05");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_06", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_06");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_07", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_07");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_08", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_08");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_09", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_09");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_10", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_10");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_11", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_11");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_12", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPayerAccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductionID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnblendedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnblendedRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsageStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountPayerAccountId");

                    b.HasIndex("ProductionID");

                    b.ToTable("LineItems_12");
                });

            modelBuilder.Entity("ETLProcess.Model.Production", b =>
                {
                    b.Property<int>("ProductionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductionName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ProductionID");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_01", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem01List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem01List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_02", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem02List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem02List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_03", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem03List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem03List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_04", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem04List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem04List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_05", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem05List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem05List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_06", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem06List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem06List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_07", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem07List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem07List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_08", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem08List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem08List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_09", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem09List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem09List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_10", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem10List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem10List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_11", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem11List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem11List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.LineItem_12", b =>
                {
                    b.HasOne("ETLProcess.Model.Account", null)
                        .WithMany("LineItem12List")
                        .HasForeignKey("AccountPayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETLProcess.Model.Production", null)
                        .WithMany("LineItem12List")
                        .HasForeignKey("ProductionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETLProcess.Model.Account", b =>
                {
                    b.Navigation("LineItem01List");

                    b.Navigation("LineItem02List");

                    b.Navigation("LineItem03List");

                    b.Navigation("LineItem04List");

                    b.Navigation("LineItem05List");

                    b.Navigation("LineItem06List");

                    b.Navigation("LineItem07List");

                    b.Navigation("LineItem08List");

                    b.Navigation("LineItem09List");

                    b.Navigation("LineItem10List");

                    b.Navigation("LineItem11List");

                    b.Navigation("LineItem12List");
                });

            modelBuilder.Entity("ETLProcess.Model.Production", b =>
                {
                    b.Navigation("LineItem01List");

                    b.Navigation("LineItem02List");

                    b.Navigation("LineItem03List");

                    b.Navigation("LineItem04List");

                    b.Navigation("LineItem05List");

                    b.Navigation("LineItem06List");

                    b.Navigation("LineItem07List");

                    b.Navigation("LineItem08List");

                    b.Navigation("LineItem09List");

                    b.Navigation("LineItem10List");

                    b.Navigation("LineItem11List");

                    b.Navigation("LineItem12List");
                });
#pragma warning restore 612, 618
        }
    }
}
